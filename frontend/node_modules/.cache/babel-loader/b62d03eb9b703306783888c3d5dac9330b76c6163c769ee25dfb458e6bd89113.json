{"ast":null,"code":"var _jsxFileName = \"/Users/adrian/Desktop/tmb_classes/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateDummyData = num => {\n  const cards = [];\n  for (let i = 1; i <= num; i++) {\n    cards.push({\n      id: i,\n      title: `Card ${i}`,\n      content: `This is the content of card ${i}.`\n    });\n  }\n  return cards;\n};\nconst App = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const generateCards = () => {\n    const num = parseInt(input);\n    if (!isNaN(num) && num > 0) {\n      setCards(generateDummyData(num));\n    } else {\n      alert(\"Please enter a valid number\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Card Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Enter some text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateCards,\n          children: \"Generate Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LtnFzjdZlcpJCha9Oj8HDtoGAGQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","generateDummyData","num","cards","i","push","id","title","content","App","_s","input","setInput","setCards","handleInputChange","e","target","value","generateCards","parseInt","isNaN","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","card","_c","$RefreshReg$"],"sources":["/Users/adrian/Desktop/tmb_classes/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\ninterface Card {\n  id: number;\n  title: string;\n  content: string;\n}\n\nconst generateDummyData = (num: number): Card[] => {\n  const cards: Card[] = [];\n  for (let i = 1; i <= num; i++) {\n    cards.push({\n      id: i,\n      title: `Card ${i}`,\n      content: `This is the content of card ${i}.`,\n    });\n  }\n  return cards;\n};\n\nconst App: React.FC = () => {\n  const [input, setInput] = useState<string>(\"\");\n  const [cards, setCards] = useState<Card[]>([]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value);\n  };\n\n  const generateCards = () => {\n    const num = parseInt(input);\n    if (!isNaN(num) && num > 0) {\n      setCards(generateDummyData(num));\n    } else {\n      alert(\"Please enter a valid number\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Card Generator</h1>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={handleInputChange}\n            placeholder=\"Enter some text\"\n          />\n          <button onClick={generateCards}>Generate Cards</button>\n        </div>\n        <div className=\"card-container\">\n          {cards.map((card) => (\n            <div key={card.id} className=\"card\">\n              <h2>{card.title}</h2>\n              <p>{card.content}</p>\n            </div>\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}