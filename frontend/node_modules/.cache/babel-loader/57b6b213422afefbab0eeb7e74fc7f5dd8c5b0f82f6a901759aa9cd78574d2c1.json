{"ast":null,"code":"var _jsxFileName = \"/Users/adrian/Desktop/tmb_classes/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    margin: \"10px 0\",\n    width: \"600px\" // Fixed width for the dropdown\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    color: \"black\",\n    backgroundColor: state.isSelected ? \"#007bff\" : \"white\",\n    \":hover\": {\n      backgroundColor: state.isSelected ? \"#007bff\" : \"#f2f2f2\"\n    }\n  }),\n  singleValue: provided => ({\n    ...provided,\n    color: \"black\"\n  }),\n  menu: provided => ({\n    ...provided,\n    zIndex: 9999,\n    width: \"600px\" // Fixed width for the dropdown options\n  })\n};\nconst App = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    // fetchthe building names from the backend\n    fetch(\"/building_names\") // fetch call reutrsn a promise of a response object\n    .then(response => response.json()) // .then() receives the response object (using the function that we passed in)\n    .then(data => {\n      // .then() chained to handle the resolved value that we got from response.json()\n      const buildingOptions = data.map(name => ({\n        value: name,\n        label: name\n      })); // apply function to each entry in data array to optain buildingOptions array\n      setOptions(buildingOptions);\n    }).catch(error => console.error(\"Error fetching building names: \", error));\n  }, []); // no dependencies\n\n  // Fetch data from the backend when the selected option changes\n  useEffect(() => {\n    if (selectedOption) {\n      fetch(`/open_now/${selectedOption.value}`).then(response => response.json()).then(data => {\n        const roomCards = Object.entries(data).map(([room, next_use_time]) => ({\n          room,\n          next_use_time\n        }));\n      }).catch(error => console.error(\"Error fetching data:\", error));\n    }\n  }, [selectedOption]); // triggered when the state: selectedOption changes\n\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSelectChange = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Empty Room Searcher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-container\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedOption,\n          onChange: handleSelectChange,\n          options: options,\n          styles: customStyles,\n          placeholder: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: card.next_use_time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, card.room_number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yAjqeipaIO0VHbyffVSRQyt+yIY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Select","jsxDEV","_jsxDEV","customStyles","control","provided","margin","width","option","state","color","backgroundColor","isSelected","singleValue","menu","zIndex","App","_s","input","setInput","cards","setCards","selectedOption","setSelectedOption","options","setOptions","fetch","then","response","json","data","buildingOptions","map","name","value","label","catch","error","console","roomCards","Object","entries","room","next_use_time","handleInputChange","e","target","handleSelectChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","styles","placeholder","card","room_number","_c","$RefreshReg$"],"sources":["/Users/adrian/Desktop/tmb_classes/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport \"./App.css\";\n\ninterface RoomCard {\n  room_number: string;\n  next_use_time: string;\n}\n\nconst customStyles = {\n  control: (provided: any) => ({\n    ...provided,\n    margin: \"10px 0\",\n    width: \"600px\", // Fixed width for the dropdown\n  }),\n  option: (provided: any, state: any) => ({\n    ...provided,\n    color: \"black\",\n    backgroundColor: state.isSelected ? \"#007bff\" : \"white\",\n    \":hover\": {\n      backgroundColor: state.isSelected ? \"#007bff\" : \"#f2f2f2\",\n    },\n  }),\n  singleValue: (provided: any) => ({\n    ...provided,\n    color: \"black\",\n  }),\n  menu: (provided: any) => ({\n    ...provided,\n    zIndex: 9999,\n    width: \"600px\", // Fixed width for the dropdown options\n  }),\n};\n\nconst App: React.FC = () => {\n  const [input, setInput] = useState<string>(\"\");\n  const [cards, setCards] = useState<RoomCard[]>([]);\n  const [selectedOption, setSelectedOption] = useState<{\n    value: string;\n    label: string;\n  } | null>(null);\n  const [options, setOptions] = useState<{ value: string; label: string }[]>(\n    []\n  );\n\n  useEffect(() => {\n    // fetchthe building names from the backend\n    fetch(\"/building_names\") // fetch call reutrsn a promise of a response object\n      .then((response) => response.json()) // .then() receives the response object (using the function that we passed in)\n      .then((data) => {\n        // .then() chained to handle the resolved value that we got from response.json()\n        const buildingOptions = data.map((name: string) => ({\n          value: name,\n          label: name,\n        })); // apply function to each entry in data array to optain buildingOptions array\n        setOptions(buildingOptions);\n      })\n      .catch((error) =>\n        console.error(\"Error fetching building names: \", error)\n      );\n  }, []); // no dependencies\n\n  // Fetch data from the backend when the selected option changes\n  useEffect(() => {\n    if (selectedOption) {\n      fetch(`/open_now/${selectedOption.value}`)\n        .then((response) => response.json())\n        .then((data) => {\n          const roomCards = Object.entries(data).map(\n            ([room, next_use_time]) => ({ room, next_use_time })\n          );\n        })\n        .catch((error) => console.error(\"Error fetching data:\", error));\n    }\n  }, [selectedOption]); // triggered when the state: selectedOption changes\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value);\n  };\n\n  const handleSelectChange = (\n    selectedOption: { value: string; label: string } | null\n  ) => {\n    setSelectedOption(selectedOption);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Empty Room Searcher</h1>\n        <div className=\"select-container\">\n          <Select\n            value={selectedOption}\n            onChange={handleSelectChange}\n            options={options}\n            styles={customStyles}\n            placeholder=\"Select an option\"\n          />\n        </div>\n        <div className=\"card-container\">\n          {cards.map((card) => (\n            <div key={card.room_number} className=\"card\">\n              <h2>{card.next_use_time}</h2>\n            </div>\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}