{"ast":null,"code":"var _jsxFileName = \"/Users/adrian/Desktop/tmb_classes/frontend/src/pages/EmptyRoomSearcherPage/EmptyRoomSearcher.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport \"./EmptyRoomSearcher.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    margin: \"10px 0\",\n    width: \"600px\" // Fixed width for the dropdown\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    color: \"black\",\n    backgroundColor: state.isSelected ? \"#007bff\" : \"white\",\n    \":hover\": {\n      backgroundColor: state.isSelected ? \"#007bff\" : \"#f2f2f2\"\n    }\n  }),\n  singleValue: provided => ({\n    ...provided,\n    color: \"black\"\n  }),\n  menu: provided => ({\n    ...provided,\n    zIndex: 9999,\n    width: \"600px\" // Fixed width for the dropdown options\n  })\n};\nconst EmptyRoomSearcher = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    // fetch the building names from the backend\n    fetch(\"/building_names\").then(response => response.json()).then(data => {\n      const buildingOptions = data.map(name => ({\n        value: name,\n        label: name\n      }));\n      setOptions(buildingOptions);\n    }).catch(error => console.error(\"Error fetching building names: \", error));\n  }, []);\n  useEffect(() => {\n    if (selectedOption) {\n      const encodedBuilding = encodeURIComponent(selectedOption.value);\n      fetch(`/open_now?building=${encodedBuilding}`).then(response => response.json()).then(data => {\n        const roomCards = Object.entries(data).map(([room, next_time]) => ({\n          room_number: room,\n          next_use_time: next_time\n        }));\n        setCards(roomCards);\n      }).catch(error => console.error(\"Error fetching data:\", error));\n    }\n  }, [selectedOption]);\n  const handleSelectChange = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EmptyRoomSearcher\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"EmptyRoomSearcher-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Empty Room Searcher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-container\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedOption,\n          onChange: handleSelectChange,\n          options: options,\n          styles: customStyles,\n          placeholder: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Room \", card.room_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: card.next_use_time === \"23:59\" ? \"Open for the rest of the day\" : `Next class at: ${card.next_use_time}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, card.room_number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(EmptyRoomSearcher, \"yAjqeipaIO0VHbyffVSRQyt+yIY=\");\n_c = EmptyRoomSearcher;\nexport default EmptyRoomSearcher;\nvar _c;\n$RefreshReg$(_c, \"EmptyRoomSearcher\");","map":{"version":3,"names":["React","useState","useEffect","Select","jsxDEV","_jsxDEV","customStyles","control","provided","margin","width","option","state","color","backgroundColor","isSelected","singleValue","menu","zIndex","EmptyRoomSearcher","_s","input","setInput","cards","setCards","selectedOption","setSelectedOption","options","setOptions","fetch","then","response","json","data","buildingOptions","map","name","value","label","catch","error","console","encodedBuilding","encodeURIComponent","roomCards","Object","entries","room","next_time","room_number","next_use_time","handleSelectChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","styles","placeholder","card","_c","$RefreshReg$"],"sources":["/Users/adrian/Desktop/tmb_classes/frontend/src/pages/EmptyRoomSearcherPage/EmptyRoomSearcher.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport \"./EmptyRoomSearcher.css\";\n\ninterface RoomCard {\n  room_number: string;\n  next_use_time: string;\n}\n\nconst customStyles = {\n  control: (provided: any) => ({\n    ...provided,\n    margin: \"10px 0\",\n    width: \"600px\", // Fixed width for the dropdown\n  }),\n  option: (provided: any, state: any) => ({\n    ...provided,\n    color: \"black\",\n    backgroundColor: state.isSelected ? \"#007bff\" : \"white\",\n    \":hover\": {\n      backgroundColor: state.isSelected ? \"#007bff\" : \"#f2f2f2\",\n    },\n  }),\n  singleValue: (provided: any) => ({\n    ...provided,\n    color: \"black\",\n  }),\n  menu: (provided: any) => ({\n    ...provided,\n    zIndex: 9999,\n    width: \"600px\", // Fixed width for the dropdown options\n  }),\n};\n\nconst EmptyRoomSearcher: React.FC = () => {\n  const [input, setInput] = useState<string>(\"\");\n  const [cards, setCards] = useState<RoomCard[]>([]);\n  const [selectedOption, setSelectedOption] = useState<{\n    value: string;\n    label: string;\n  } | null>(null);\n  const [options, setOptions] = useState<{ value: string; label: string }[]>(\n    []\n  );\n\n  useEffect(() => {\n    // fetch the building names from the backend\n    fetch(\"/building_names\")\n      .then((response) => response.json())\n      .then((data) => {\n        const buildingOptions = data.map((name: string) => ({\n          value: name,\n          label: name,\n        }));\n        setOptions(buildingOptions);\n      })\n      .catch((error) =>\n        console.error(\"Error fetching building names: \", error)\n      );\n  }, []);\n\n  useEffect(() => {\n    if (selectedOption) {\n      const encodedBuilding = encodeURIComponent(selectedOption.value);\n      fetch(`/open_now?building=${encodedBuilding}`)\n        .then((response) => response.json())\n        .then((data) => {\n          const roomCards = Object.entries(data).map(([room, next_time]) => ({\n            room_number: room,\n            next_use_time: next_time as string,\n          }));\n          setCards(roomCards);\n        })\n        .catch((error) => console.error(\"Error fetching data:\", error));\n    }\n  }, [selectedOption]);\n\n  const handleSelectChange = (\n    selectedOption: { value: string; label: string } | null\n  ) => {\n    setSelectedOption(selectedOption);\n  };\n\n  return (\n    <div className=\"EmptyRoomSearcher\">\n      <header className=\"EmptyRoomSearcher-header\">\n        <h1>Empty Room Searcher</h1>\n        <div className=\"select-container\">\n          <Select\n            value={selectedOption}\n            onChange={handleSelectChange}\n            options={options}\n            styles={customStyles}\n            placeholder=\"Select an option\"\n          />\n        </div>\n        <div className=\"card-container\">\n          {cards.map((card) => (\n            <div key={card.room_number} className=\"card\">\n              <h1>Room {card.room_number}</h1>\n              <h2>\n                {card.next_use_time === \"23:59\"\n                  ? \"Open for the rest of the day\"\n                  : `Next class at: ${card.next_use_time}`}\n              </h2>\n            </div>\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n};\n\nexport default EmptyRoomSearcher;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}